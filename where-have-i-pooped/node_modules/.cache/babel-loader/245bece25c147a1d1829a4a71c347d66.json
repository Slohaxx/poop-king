{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lolz\\\\Documents\\\\poop king\\\\poop-king\\\\where-have-i-pooped\\\\src\\\\components\\\\MapView.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Map, Marker, GoogleApiWrapper } from 'google-maps-react';\nimport { getUserLocation } from '../services/mapService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MapView = props => {\n  _s();\n  const [userLocation, setUserLocation] = useState({\n    lat: 0,\n    lng: 0\n  });\n  const [checkIns, setCheckIns] = useState([]);\n  useEffect(() => {\n    const fetchUserLocation = async () => {\n      const location = await getUserLocation();\n      setUserLocation(location);\n    };\n    fetchUserLocation();\n  }, []);\n  const handleCheckIn = (mapProps, map, clickEvent) => {\n    const newCheckIn = {\n      lat: clickEvent.latLng.lat(),\n      lng: clickEvent.latLng.lng()\n    };\n    setCheckIns([...checkIns, newCheckIn]);\n    // Additional logic to save check-in can be added here\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: '100%',\n      height: '100%'\n    },\n    children: /*#__PURE__*/_jsxDEV(Map, {\n      google: props.google,\n      zoom: 14,\n      initialCenter: userLocation,\n      center: userLocation,\n      onClick: handleCheckIn,\n      children: [/*#__PURE__*/_jsxDEV(Marker, {\n        position: userLocation\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), checkIns.map((checkIn, index) => /*#__PURE__*/_jsxDEV(Marker, {\n        position: checkIn\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n};\n_s(MapView, \"OINavkmyrfi2Q8agnYZbNKYLzBA=\");\n_c = MapView;\nexport default GoogleApiWrapper({\n  apiKey: 'YOUR_GOOGLE_MAPS_API_KEY'\n})(MapView);\nvar _c;\n$RefreshReg$(_c, \"MapView\");","map":{"version":3,"names":["React","useEffect","useState","Map","Marker","GoogleApiWrapper","getUserLocation","jsxDEV","_jsxDEV","MapView","props","_s","userLocation","setUserLocation","lat","lng","checkIns","setCheckIns","fetchUserLocation","location","handleCheckIn","mapProps","map","clickEvent","newCheckIn","latLng","style","width","height","children","google","zoom","initialCenter","center","onClick","position","fileName","_jsxFileName","lineNumber","columnNumber","checkIn","index","_c","apiKey","$RefreshReg$"],"sources":["C:/Users/lolz/Documents/poop king/poop-king/where-have-i-pooped/src/components/MapView.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Map, Marker, GoogleApiWrapper } from 'google-maps-react';\nimport { getUserLocation } from '../services/mapService';\n\nconst MapView = (props) => {\n    const [userLocation, setUserLocation] = useState({ lat: 0, lng: 0 });\n    const [checkIns, setCheckIns] = useState([]);\n\n    useEffect(() => {\n        const fetchUserLocation = async () => {\n            const location = await getUserLocation();\n            setUserLocation(location);\n        };\n\n        fetchUserLocation();\n    }, []);\n\n    const handleCheckIn = (mapProps, map, clickEvent) => {\n        const newCheckIn = {\n            lat: clickEvent.latLng.lat(),\n            lng: clickEvent.latLng.lng(),\n        };\n        setCheckIns([...checkIns, newCheckIn]);\n        // Additional logic to save check-in can be added here\n    };\n\n    return (\n        <div style={{ width: '100%', height: '100%' }}>\n            <Map\n                google={props.google}\n                zoom={14}\n                initialCenter={userLocation}\n                center={userLocation}\n                onClick={handleCheckIn}\n            >\n                <Marker position={userLocation} />\n                {checkIns.map((checkIn, index) => (\n                    <Marker key={index} position={checkIn} />\n                ))}\n            </Map>\n        </div>\n    );\n};\n\nexport default GoogleApiWrapper({\n    apiKey: 'YOUR_GOOGLE_MAPS_API_KEY',\n})(MapView);"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,GAAG,EAAEC,MAAM,EAAEC,gBAAgB,QAAQ,mBAAmB;AACjE,SAASC,eAAe,QAAQ,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzD,MAAMC,OAAO,GAAIC,KAAK,IAAK;EAAAC,EAAA;EACvB,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGX,QAAQ,CAAC;IAAEY,GAAG,EAAE,CAAC;IAAEC,GAAG,EAAE;EAAE,CAAC,CAAC;EACpE,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAE5CD,SAAS,CAAC,MAAM;IACZ,MAAMiB,iBAAiB,GAAG,MAAAA,CAAA,KAAY;MAClC,MAAMC,QAAQ,GAAG,MAAMb,eAAe,CAAC,CAAC;MACxCO,eAAe,CAACM,QAAQ,CAAC;IAC7B,CAAC;IAEDD,iBAAiB,CAAC,CAAC;EACvB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAME,aAAa,GAAGA,CAACC,QAAQ,EAAEC,GAAG,EAAEC,UAAU,KAAK;IACjD,MAAMC,UAAU,GAAG;MACfV,GAAG,EAAES,UAAU,CAACE,MAAM,CAACX,GAAG,CAAC,CAAC;MAC5BC,GAAG,EAAEQ,UAAU,CAACE,MAAM,CAACV,GAAG,CAAC;IAC/B,CAAC;IACDE,WAAW,CAAC,CAAC,GAAGD,QAAQ,EAAEQ,UAAU,CAAC,CAAC;IACtC;EACJ,CAAC;EAED,oBACIhB,OAAA;IAAKkB,KAAK,EAAE;MAAEC,KAAK,EAAE,MAAM;MAAEC,MAAM,EAAE;IAAO,CAAE;IAAAC,QAAA,eAC1CrB,OAAA,CAACL,GAAG;MACA2B,MAAM,EAAEpB,KAAK,CAACoB,MAAO;MACrBC,IAAI,EAAE,EAAG;MACTC,aAAa,EAAEpB,YAAa;MAC5BqB,MAAM,EAAErB,YAAa;MACrBsB,OAAO,EAAEd,aAAc;MAAAS,QAAA,gBAEvBrB,OAAA,CAACJ,MAAM;QAAC+B,QAAQ,EAAEvB;MAAa;QAAAwB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,EACjCvB,QAAQ,CAACM,GAAG,CAAC,CAACkB,OAAO,EAAEC,KAAK,kBACzBjC,OAAA,CAACJ,MAAM;QAAa+B,QAAQ,EAAEK;MAAQ,GAAzBC,KAAK;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAsB,CAC3C,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;AAAC5B,EAAA,CAtCIF,OAAO;AAAAiC,EAAA,GAAPjC,OAAO;AAwCb,eAAeJ,gBAAgB,CAAC;EAC5BsC,MAAM,EAAE;AACZ,CAAC,CAAC,CAAClC,OAAO,CAAC;AAAC,IAAAiC,EAAA;AAAAE,YAAA,CAAAF,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module"}